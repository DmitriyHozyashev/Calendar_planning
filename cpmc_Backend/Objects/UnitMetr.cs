//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cpmc
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business.Audit;
    using ICSSoft.STORMNET.Business.Audit.Objects;
    
    
    // *** Start programmer edit section *** (Using statements)

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Unit metr.
    /// </summary>
    // *** Start programmer edit section *** (UnitMetr CustomAttributes)

    // *** End programmer edit section *** (UnitMetr CustomAttributes)
    [AutoAltered()]
    [Caption("Единицы измерения")]
    [AccessType(ICSSoft.STORMNET.AccessType.none)]
    [View("AuditView", new string[] {
            "Code as \'Code\'",
            "Name as \'Name\'",
            "ShortName as \'Short name\'",
            "Coefficient as \'Coefficient\'",
            "CreateTime as \'Create time\'",
            "Creator as \'Creator\'",
            "EditTime as \'Edit time\'",
            "Editor as \'Editor\'",
            "BaseUnit as \'Base unit\'",
            "BaseUnit.Name as \'Name\'"})]
    [View("UnitMetrE", new string[] {
            "Code as \'Код\'",
            "Name as \'Наименование\'",
            "ShortName as \'Сокращение\'",
            "Coefficient as \'Коэфициент преобразования\'",
            "BaseUnit as \'Базовая единица измерения\'",
            "BaseUnit.Name as \'Name\'"}, Hidden=new string[] {
            "BaseUnit.Name"})]
    [MasterViewDefineAttribute("UnitMetrE", "BaseUnit", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Name")]
    [View("UnitMetrL", new string[] {
            "Code as \'Код\'",
            "Name as \'Наименование\'",
            "ShortName as \'Сокращение\'",
            "Coefficient as \'Коэфициент преобразования\'",
            "BaseUnit.Name as \'Базовая еденица измерения\'"})]
    public class UnitMetr : ICSSoft.STORMNET.DataObject, IDataObjectWithAuditFields
    {
        
        private int fCode;
        
        private string fName;
        
        private string fShortName;
        
        private double fCoefficient;
        
        private System.Nullable<System.DateTime> fCreateTime;
        
        private string fCreator;
        
        private System.Nullable<System.DateTime> fEditTime;
        
        private string fEditor;
        
        private Cpmc.UnitMetr fBaseUnit;
        
        // *** Start programmer edit section *** (UnitMetr CustomMembers)

        // *** End programmer edit section *** (UnitMetr CustomMembers)

        
        /// <summary>
        /// Code.
        /// </summary>
        // *** Start programmer edit section *** (UnitMetr.Code CustomAttributes)

        // *** End programmer edit section *** (UnitMetr.Code CustomAttributes)
        public virtual int Code
        {
            get
            {
                // *** Start programmer edit section *** (UnitMetr.Code Get start)

                // *** End programmer edit section *** (UnitMetr.Code Get start)
                int result = this.fCode;
                // *** Start programmer edit section *** (UnitMetr.Code Get end)

                // *** End programmer edit section *** (UnitMetr.Code Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (UnitMetr.Code Set start)

                // *** End programmer edit section *** (UnitMetr.Code Set start)
                this.fCode = value;
                // *** Start programmer edit section *** (UnitMetr.Code Set end)

                // *** End programmer edit section *** (UnitMetr.Code Set end)
            }
        }
        
        /// <summary>
        /// Name.
        /// </summary>
        // *** Start programmer edit section *** (UnitMetr.Name CustomAttributes)

        // *** End programmer edit section *** (UnitMetr.Name CustomAttributes)
        [StrLen(255)]
        public virtual string Name
        {
            get
            {
                // *** Start programmer edit section *** (UnitMetr.Name Get start)

                // *** End programmer edit section *** (UnitMetr.Name Get start)
                string result = this.fName;
                // *** Start programmer edit section *** (UnitMetr.Name Get end)

                // *** End programmer edit section *** (UnitMetr.Name Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (UnitMetr.Name Set start)

                // *** End programmer edit section *** (UnitMetr.Name Set start)
                this.fName = value;
                // *** Start programmer edit section *** (UnitMetr.Name Set end)

                // *** End programmer edit section *** (UnitMetr.Name Set end)
            }
        }
        
        /// <summary>
        /// ShortName.
        /// </summary>
        // *** Start programmer edit section *** (UnitMetr.ShortName CustomAttributes)

        // *** End programmer edit section *** (UnitMetr.ShortName CustomAttributes)
        [StrLen(255)]
        public virtual string ShortName
        {
            get
            {
                // *** Start programmer edit section *** (UnitMetr.ShortName Get start)

                // *** End programmer edit section *** (UnitMetr.ShortName Get start)
                string result = this.fShortName;
                // *** Start programmer edit section *** (UnitMetr.ShortName Get end)

                // *** End programmer edit section *** (UnitMetr.ShortName Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (UnitMetr.ShortName Set start)

                // *** End programmer edit section *** (UnitMetr.ShortName Set start)
                this.fShortName = value;
                // *** Start programmer edit section *** (UnitMetr.ShortName Set end)

                // *** End programmer edit section *** (UnitMetr.ShortName Set end)
            }
        }
        
        /// <summary>
        /// Coefficient.
        /// </summary>
        // *** Start programmer edit section *** (UnitMetr.Coefficient CustomAttributes)

        // *** End programmer edit section *** (UnitMetr.Coefficient CustomAttributes)
        public virtual double Coefficient
        {
            get
            {
                // *** Start programmer edit section *** (UnitMetr.Coefficient Get start)

                // *** End programmer edit section *** (UnitMetr.Coefficient Get start)
                double result = this.fCoefficient;
                // *** Start programmer edit section *** (UnitMetr.Coefficient Get end)

                // *** End programmer edit section *** (UnitMetr.Coefficient Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (UnitMetr.Coefficient Set start)

                // *** End programmer edit section *** (UnitMetr.Coefficient Set start)
                this.fCoefficient = value;
                // *** Start programmer edit section *** (UnitMetr.Coefficient Set end)

                // *** End programmer edit section *** (UnitMetr.Coefficient Set end)
            }
        }
        
        /// <summary>
        /// Время создания объекта.
        /// </summary>
        // *** Start programmer edit section *** (UnitMetr.CreateTime CustomAttributes)

        // *** End programmer edit section *** (UnitMetr.CreateTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> CreateTime
        {
            get
            {
                // *** Start programmer edit section *** (UnitMetr.CreateTime Get start)

                // *** End programmer edit section *** (UnitMetr.CreateTime Get start)
                System.Nullable<System.DateTime> result = this.fCreateTime;
                // *** Start programmer edit section *** (UnitMetr.CreateTime Get end)

                // *** End programmer edit section *** (UnitMetr.CreateTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (UnitMetr.CreateTime Set start)

                // *** End programmer edit section *** (UnitMetr.CreateTime Set start)
                this.fCreateTime = value;
                // *** Start programmer edit section *** (UnitMetr.CreateTime Set end)

                // *** End programmer edit section *** (UnitMetr.CreateTime Set end)
            }
        }
        
        /// <summary>
        /// Создатель объекта.
        /// </summary>
        // *** Start programmer edit section *** (UnitMetr.Creator CustomAttributes)

        // *** End programmer edit section *** (UnitMetr.Creator CustomAttributes)
        [StrLen(255)]
        public virtual string Creator
        {
            get
            {
                // *** Start programmer edit section *** (UnitMetr.Creator Get start)

                // *** End programmer edit section *** (UnitMetr.Creator Get start)
                string result = this.fCreator;
                // *** Start programmer edit section *** (UnitMetr.Creator Get end)

                // *** End programmer edit section *** (UnitMetr.Creator Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (UnitMetr.Creator Set start)

                // *** End programmer edit section *** (UnitMetr.Creator Set start)
                this.fCreator = value;
                // *** Start programmer edit section *** (UnitMetr.Creator Set end)

                // *** End programmer edit section *** (UnitMetr.Creator Set end)
            }
        }
        
        /// <summary>
        /// Время последнего редактирования объекта.
        /// </summary>
        // *** Start programmer edit section *** (UnitMetr.EditTime CustomAttributes)

        // *** End programmer edit section *** (UnitMetr.EditTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> EditTime
        {
            get
            {
                // *** Start programmer edit section *** (UnitMetr.EditTime Get start)

                // *** End programmer edit section *** (UnitMetr.EditTime Get start)
                System.Nullable<System.DateTime> result = this.fEditTime;
                // *** Start programmer edit section *** (UnitMetr.EditTime Get end)

                // *** End programmer edit section *** (UnitMetr.EditTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (UnitMetr.EditTime Set start)

                // *** End programmer edit section *** (UnitMetr.EditTime Set start)
                this.fEditTime = value;
                // *** Start programmer edit section *** (UnitMetr.EditTime Set end)

                // *** End programmer edit section *** (UnitMetr.EditTime Set end)
            }
        }
        
        /// <summary>
        /// Последний редактор объекта.
        /// </summary>
        // *** Start programmer edit section *** (UnitMetr.Editor CustomAttributes)

        // *** End programmer edit section *** (UnitMetr.Editor CustomAttributes)
        [StrLen(255)]
        public virtual string Editor
        {
            get
            {
                // *** Start programmer edit section *** (UnitMetr.Editor Get start)

                // *** End programmer edit section *** (UnitMetr.Editor Get start)
                string result = this.fEditor;
                // *** Start programmer edit section *** (UnitMetr.Editor Get end)

                // *** End programmer edit section *** (UnitMetr.Editor Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (UnitMetr.Editor Set start)

                // *** End programmer edit section *** (UnitMetr.Editor Set start)
                this.fEditor = value;
                // *** Start programmer edit section *** (UnitMetr.Editor Set end)

                // *** End programmer edit section *** (UnitMetr.Editor Set end)
            }
        }
        
        /// <summary>
        /// Unit metr.
        /// </summary>
        // *** Start programmer edit section *** (UnitMetr.BaseUnit CustomAttributes)

        // *** End programmer edit section *** (UnitMetr.BaseUnit CustomAttributes)
        public virtual Cpmc.UnitMetr BaseUnit
        {
            get
            {
                // *** Start programmer edit section *** (UnitMetr.BaseUnit Get start)

                // *** End programmer edit section *** (UnitMetr.BaseUnit Get start)
                Cpmc.UnitMetr result = this.fBaseUnit;
                // *** Start programmer edit section *** (UnitMetr.BaseUnit Get end)

                // *** End programmer edit section *** (UnitMetr.BaseUnit Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (UnitMetr.BaseUnit Set start)

                // *** End programmer edit section *** (UnitMetr.BaseUnit Set start)
                this.fBaseUnit = value;
                // *** Start programmer edit section *** (UnitMetr.BaseUnit Set end)

                // *** End programmer edit section *** (UnitMetr.BaseUnit Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// "AuditView" view.
            /// </summary>
            public static ICSSoft.STORMNET.View AuditView
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("AuditView", typeof(Cpmc.UnitMetr));
                }
            }
            
            /// <summary>
            /// "UnitMetrE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View UnitMetrE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("UnitMetrE", typeof(Cpmc.UnitMetr));
                }
            }
            
            /// <summary>
            /// "UnitMetrL" view.
            /// </summary>
            public static ICSSoft.STORMNET.View UnitMetrL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("UnitMetrL", typeof(Cpmc.UnitMetr));
                }
            }
        }
        
        /// <summary>
        /// Audit class settings.
        /// </summary>
        public class AuditSettings
        {
            
            /// <summary>
            /// Включён ли аудит для класса.
            /// </summary>
            public static bool AuditEnabled = true;
            
            /// <summary>
            /// Использовать имя представления для аудита по умолчанию.
            /// </summary>
            public static bool UseDefaultView = false;
            
            /// <summary>
            /// Включён ли аудит операции чтения.
            /// </summary>
            public static bool SelectAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции чтения.
            /// </summary>
            public static string SelectAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции создания.
            /// </summary>
            public static bool InsertAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции создания.
            /// </summary>
            public static string InsertAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции изменения.
            /// </summary>
            public static bool UpdateAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции изменения.
            /// </summary>
            public static string UpdateAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции удаления.
            /// </summary>
            public static bool DeleteAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции удаления.
            /// </summary>
            public static string DeleteAuditViewName = "AuditView";
            
            /// <summary>
            /// Путь к форме просмотра результатов аудита.
            /// </summary>
            public static string FormUrl = "";
            
            /// <summary>
            /// Режим записи данных аудита (синхронный или асинхронный).
            /// </summary>
            public static ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode WriteMode = ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode.Synchronous;
            
            /// <summary>
            /// Максимальная длина сохраняемого значения поля (если 0, то строка обрезаться не будет).
            /// </summary>
            public static int PrunningLength = 0;
            
            /// <summary>
            /// Показывать ли пользователям в изменениях первичные ключи.
            /// </summary>
            public static bool ShowPrimaryKey = false;
            
            /// <summary>
            /// Сохранять ли старое значение.
            /// </summary>
            public static bool KeepOldValue = true;
            
            /// <summary>
            /// Сжимать ли сохраняемые значения.
            /// </summary>
            public static bool Compress = false;
            
            /// <summary>
            /// Сохранять ли все значения атрибутов, а не только изменяемые.
            /// </summary>
            public static bool KeepAllValues = false;
        }
    }
}
